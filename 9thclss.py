# -*- coding: utf-8 -*-
"""9thclss.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p7V2SfBhZeJJNv7ofIQb8g-FKi56PBfS
"""

def main_menu():
  print("MAIN MENU")
  print("1. String Operation")
  print("2. Number Operation")
  print("3. EXIT")


def main():
  while (True):
    main_menu()
    choice = input('\nEnter choice(1, 2 or 3): ')
    if choice == '1':
      print("\nThank you for choosing string operation")
    elif choice == '2':
      print('\nThank you for choosing number operation.')
    elif choice == '3':
      print('\nThanks for using Switch Statements')
      break
    else:
      print('\nInvalid input!!!')
main()

#Add a function in string operation section that takes an email as input  and validated it. Press 2 for exit

import re

def fnEmailValidation(email):
  if re.match(f"[^@]+@[^@]+\.[^@]+", email):
    return True
  return False

while True:
  rchoice = input('Choice(1-> EmailValidation,2->Exit): ')
  print()
  if rchoice == '1':
    email = input("\nEnter an email address: ")
    if (fnEmailValidation(email)) is True: # Indent this block to be part of the 'if rchoice == '1'' block
      print(f"\nProvided email address [{email}] is valid")
    else:
      print(f"\nProvided email address [{email}] is not valid") # Indent and close the bracket
  elif rchoice == '2':
    print('\nExiting...') # A more informative message
    break # Exit the loop when the user chooses to exit

import re

def fnEmailValidation(email):
  if re.match(f"[^@]+@[^@]+\.[^@]+", email):
    return True
  return False

def createPyramid(n):
  for i in range(0, n):
    print("#" * i)
  for i in range(n, 0, -1):
    print("#" * i)

while True:
  rchoice = input('Choice(1-> EmailValidation, 2->Pyramid, 3->Exit): ')
  print()
  if rchoice == '1':
    email = input("\nEnter an email address: ")
    if (fnEmailValidation(email)) is True:
      print(f"\nProvided email address [{email}] is valid")
    else:
      print(f"\nProvided email address [{email}] is not valid")
  elif rchoice == '2':
    n = int(input("Enter the number of rows for the pyramid: "))
    createPyramid(n)
  elif rchoice == '3':
    print("\nExiting...")
    break
  else:
    print("\nInvalid choice. Please try again.")

import re

def fnEmailValidation(email):
  if re.match(f"[^@]+@[^@]+\.[^@]+", email):
    return True
  return False

def createPyramid(n):
  for i in range(0, n):
    print("#" * i)
  for i in range(n, 0, -1):
    print("#" * i)

def write_lines_to_file(filename):
  lines =[]
  print("Enter multiple line of text (type 'DONE' on a new line to finish):")
  while True:
    line = input()
    if line.strip().upper()=="DONE":
      break
    lines.append(line)
  with open(filename, "w") as file:
    for line in lines:
      file.write(line + "\n")
  print(f"File [{filename}] has been saved successfully!")

while True:
  rchoice = input('Choice(1-> EmailValidation, 2->Pyramid, 3-> Write to File, 4->Exit): ')
  print()
  if rchoice == '1':
    email = input("\nEnter an email address: ")
    if (fnEmailValidation(email)) is True:
      print(f"\nProvided email address [{email}] is valid")
    else:
      print(f"\nProvided email address [{email}] is not valid")
  elif rchoice == '2':
    n = int(input("Enter the number of rows for the pyramid: "))
    createPyramid(n)
  elif rchoice == '3':
    filename = input("Enter the filename to save: ")
    write_lines_to_file(filename)
  elif rchoice == '4':
    print("\nExiting...")
    break
  else:
    print("\nInvalid choice. Please try again.")

